[project]
name = "fast-blurhash"
version = "0.2.0"
description = "Minimal, fast BlurHash encoder/decoder for Python. A wrapper around the Rust fast-blurhash crate, with fully typed API and support for CPython 3.10–3.13."
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "アンドロ" }]
keywords = ["blurhash", "image", "rust", "pyo3", "ffi", "bindings"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Multimedia :: Graphics",
    "Typing :: Typed",
    "Programming Language :: Python :: Implementation :: CPython",
]
requires-python = ">=3.10,<=3.13"
dependencies = []

[dependency-groups]
blurhash = [
    "blurhash-python>=1.2.2",
]
dev = [
    "fast-blurhash",
    "mypy>=1.14.1",
    "ruff>=0.12.8",
    "pytest>=8.3.5",
    "nox>=2025.5.1",
    "pytest-xdist>=3.8.0",
    "bumpversion>=0.6.0",
]
pillow = [
    "pillow>=11.3.0",
]

[build-system]
requires = ["maturin>=1.9,<2.0"]
build-backend = "maturin"


[tool.mypy]
files = ["fast_blurhash/", "tests/"]
strict = true
strict_bytes = true
local_partial_types = true
ignore_missing_imports = true
install_types = true
non_interactive = true
extra_checks = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_generics = true
warn_return_any = true
warn_unused_ignores = false
warn_unused_configs = true
warn_unreachable = true
pretty = true
color_output = true
show_error_codes = true
show_error_context = true
exclude = "(\\.venv|\\.tox|build|dist)/"

[tool.ruff]
exclude = [".venv"]
fix = true
unsafe-fixes = false
line-length = 120

[tool.ruff.lint]
ignore = [
  "TRY003",       # raise-vanilla-args (TRY003)
  "EM101",        # raw-string-in-exception (EM101)
  "ANN401",       # any-type (ANN401)
  "PLR0913",      # too-many-arguments (PLR0913)
  # Incompatible
  "D203",         # incorrect-blank-line-before-class (D203)
  "D212",         # multi-line-summary-first-line (D212)
  "COM812",       # missing-trailing-comma (COM812)
  "D103",         # missing-function-docstring (D103)
]
unfixable = []
extend-select = ["ALL"]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
  "S101",         # assert (S101)
  "D100",         # undocumented-public-module (D100)
  "D103",         # undocumented-public-function (D103)
  "D104",         # undocumented-public-function (D103)
]

[tool.ruff.lint.isort]
case-sensitive = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
python_files = "tests/*.py"
console_output_style = "progress"
addopts = "-vs -rf"
markers = [
    "no_pillow: mark a test to run only when Pillow is NOT installed"
]

[tool.maturin]
bindings = "pyo3"
features = ["pyo3/extension-module", "pyo3/abi3-py310"]
module-name = "fast_blurhash._fast_blurhash"
strip = true
python-packages = ["fast_blurhash"]
include = ["fast_blurhash/py.typed"]
sdist-include = ["README.md", "LICENSE", "fast_blurhash/py.typed"]

[tool.uv.sources]
fast-blurhash = { workspace = true }
